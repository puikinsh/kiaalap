{{> head}}

<style>
/* Critical CSS for immediate render */
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif; background: #f5f7fa; }
        .sidebar { position: fixed; left: 0; top: 0; width: 260px; height: 100vh; background: #1f2937; z-index: 1040; }
        .main-wrapper { margin-left: 260px; min-height: 100vh; transition: margin-left 0.3s ease; }
        .top-navbar { background: white; height: 60px; box-shadow: 0 1px 3px rgba(0,0,0,0.1); }
        .dashboard-content { padding: 24px; }

        /* Loading animation */
        @keyframes pulse { 0%, 100% { opacity: 1; } 50% { opacity: 0.5; } }
        .loading { animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite; background: #e5e7eb; }
</style>

{{> sidebar}}

<!-- Main Content Wrapper -->
<div class="main-wrapper" id="mainWrapper">
    {{> header}}

    <!-- Main Content -->
    <main class="dashboard-content" id="main-content">
        <div class="container-fluid">
<!-- Page Header -->
            <div class="mb-3">
                <h1 class="h3 font-bold">X-Editable Forms</h1>
                <p class="text-muted text-sm">Inline editing components for seamless content management.</p>
            </div>

            <!-- X-Editable Content Row -->
            <div class="dashboard-row">
                <div class="dashboard-grid grid-cols-2">
                    <!-- Basic X-Editable Examples -->
                    <div class="chart-wrapper">
                        <div class="dashboard-card-header">
                            <h5 class="dashboard-card-title">Basic X-Editable Examples</h5>
                        </div>
                        <div class="chart-container-main">
                            <div class="p-3">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>Field Type</th>
                                            <th>Value</th>
                                            <th>Description</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td><strong>Text Field</strong></td>
                                            <td><a href="#" id="username" data-type="text" data-pk="1" data-title="Enter username">superuser</a></td>
                                            <td>Simple text input</td>
                                        </tr>
                                        <tr>
                                            <td><strong>Email</strong></td>
                                            <td><a href="#" id="email" data-type="email" data-pk="1" data-title="Enter email">user@example.com</a></td>
                                            <td>Email validation</td>
                                        </tr>
                                        <tr>
                                            <td><strong>Textarea</strong></td>
                                            <td><a href="#" id="comments" data-type="textarea" data-pk="1" data-title="Enter comments">This is a sample comment that can be edited inline.</a></td>
                                            <td>Multi-line text</td>
                                        </tr>
                                        <tr>
                                            <td><strong>Select</strong></td>
                                            <td><a href="#" id="status" data-type="select" data-pk="1" data-value="2" data-source="[{value: 1, text: 'Active'},{value: 2, text: 'Inactive'},{value: 3, text: 'Pending'}]" data-title="Select status">Inactive</a></td>
                                            <td>Dropdown selection</td>
                                        </tr>
                                        <tr>
                                            <td><strong>Date</strong></td>
                                            <td><a href="#" id="dob" data-type="date" data-pk="1" data-title="Select date">2023-05-15</a></td>
                                            <td>Date picker</td>
                                        </tr>
                                        <tr>
                                            <td><strong>Number</strong></td>
                                            <td><a href="#" id="age" data-type="number" data-pk="1" data-title="Enter age">25</a></td>
                                            <td>Numeric input</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                    <!-- User Profile Example -->
                    <div class="chart-wrapper">
                        <div class="dashboard-card-header">
                            <h5 class="dashboard-card-title">User Profile Example</h5>
                        </div>
                        <div class="chart-container-main">
                            <div class="p-3">
                                <div class="row">
                                    <div class="col-md-4 text-center mb-4">
                                        <img src="https://ui-avatars.com/api/?name=John+Doe&size=150&background=007bff&color=fff" alt="Profile" class="rounded-circle mb-3" width="100" height="100">
                                        <h5><a href="#" id="fullname" data-type="text" data-pk="1" data-title="Enter full name">John Doe</a></h5>
                                        <p class="text-muted"><a href="#" id="job_title" data-type="text" data-pk="1" data-title="Enter job title">Senior Developer</a></p>
                                    </div>
                                    <div class="col-md-8">
                                        <div class="row mb-2">
                                            <div class="col-sm-3"><strong>Email:</strong></div>
                                            <div class="col-sm-9"><a href="#" id="profile_email" data-type="email" data-pk="1" data-title="Enter email">john.doe@company.com</a></div>
                                        </div>
                                        <div class="row mb-2">
                                            <div class="col-sm-3"><strong>Phone:</strong></div>
                                            <div class="col-sm-9"><a href="#" id="phone" data-type="text" data-pk="1" data-title="Enter phone">+1 (555) 123-4567</a></div>
                                        </div>
                                        <div class="row mb-2">
                                            <div class="col-sm-3"><strong>Department:</strong></div>
                                            <div class="col-sm-9"><a href="#" id="department" data-type="select" data-pk="1" data-value="it" data-source="[{value: 'it', text: 'IT'},{value: 'hr', text: 'HR'},{value: 'finance', text: 'Finance'},{value: 'marketing', text: 'Marketing'}]" data-title="Select department">IT</a></div>
                                        </div>
                                        <div class="row mb-2">
                                            <div class="col-sm-3"><strong>Joined:</strong></div>
                                            <div class="col-sm-9"><a href="#" id="join_date" data-type="date" data-pk="1" data-title="Select join date">2020-03-15</a></div>
                                        </div>
                                        <div class="row mb-2">
                                            <div class="col-sm-3"><strong>Location:</strong></div>
                                            <div class="col-sm-9"><a href="#" id="location" data-type="text" data-pk="1" data-title="Enter location">New York, NY</a></div>
                                        </div>
                                        <div class="row mb-2">
                                            <div class="col-sm-3"><strong>Bio:</strong></div>
                                            <div class="col-sm-9"><a href="#" id="bio" data-type="textarea" data-pk="1" data-title="Enter bio">Experienced developer with expertise in modern web technologies and team leadership.</a></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Advanced X-Editable Row -->
            <div class="dashboard-row">
                <div class="dashboard-grid grid-cols-1">
                    <div class="chart-wrapper">
                        <div class="dashboard-card-header">
                            <h5 class="dashboard-card-title">Advanced X-Editable Types</h5>
                        </div>
                        <div class="chart-container-main">
                            <div class="p-3">
                                <div class="table-responsive">
                                    <table class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th>Field Type</th>
                                                <th>Value</th>
                                                <th>Description</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td><strong>Checklist</strong></td>
                                                <td><a href="#" id="skills" data-type="checklist" data-pk="1" data-value="[1,3]" data-source="[{value: 1, text: 'HTML'},{value: 2, text: 'CSS'},{value: 3, text: 'JavaScript'},{value: 4, text: 'PHP'},{value: 5, text: 'Python'}]" data-title="Select skills">HTML, JavaScript</a></td>
                                                <td>Multiple checkboxes</td>
                                            </tr>
                                            <tr>
                                                <td><strong>Select2</strong></td>
                                                <td><a href="#" id="framework" data-type="select2" data-pk="1" data-value="react" data-source="[{id: 'react', text: 'React'},{id: 'angular', text: 'Angular'},{id: 'vue', text: 'Vue.js'},{id: 'svelte', text: 'Svelte'}]" data-title="Choose framework">React</a></td>
                                                <td>Enhanced select with search</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>        </div>
    </main>

    {{> footer}}
</div>

{{> scripts}}

<script>
// Custom X-Editable Implementation
        $(document).ready(function() {
            let activeEditable = null;

            // Initialize all editable elements
            $('[data-type]').each(function() {
                const $element = $(this);
                $element.addClass('editable-click');

                // Add empty class if no content
                if (!$element.text().trim()) {
                    $element.addClass('editable-empty').text('Empty');
                }
            });

            // Handle click events
            $(document).on('click', '.editable-click', function(e) {
                e.preventDefault();

                if (activeEditable) {
                    closeEditable(activeEditable);
                }

                const $this = $(this);
                openEditable($this);
            });

            // Close on backdrop click
            $(document).on('click', '.editable-backdrop', function() {
                if (activeEditable) {
                    closeEditable(activeEditable);
                }
            });

            // Close on escape key
            $(document).on('keydown', function(e) {
                if (e.key === 'Escape' && activeEditable) {
                    closeEditable(activeEditable);
                }
            });

            function openEditable($element) {
                activeEditable = $element;

                const type = $element.data('type');
                const value = $element.hasClass('editable-empty') ? '' : $element.text();
                const title = $element.data('title') || 'Enter value';

                // Create backdrop
                const $backdrop = $('<div class="editable-backdrop"></div>');
                $('body').append($backdrop);

                // Create container
                const $container = $('<div class="editable-container"></div>');

                // Create form
                const $form = $('<form class="editable-form"></form>');

                // Create input based on type
                let $input;
                switch (type) {
                    case 'textarea':
                        $input = $('<textarea class="form-control editable-input" rows="3"></textarea>');
                        break;
                    case 'select':
                        $input = $('<select class="form-select editable-input"></select>');
                        const source = $element.data('source');
                        if (source && Array.isArray(source)) {
                            source.forEach(option => {
                                const $option = $('<option></option>')
                                    .val(option.value)
                                    .text(option.text);
                                if (option.value == $element.data('value')) {
                                    $option.prop('selected', true);
                                }
                                $input.append($option);
                            });
                        }
                        break;
                    case 'email':
                        $input = $('<input type="email" class="form-control editable-input">');
                        break;
                    case 'number':
                        $input = $('<input type="number" class="form-control editable-input">');
                        break;
                    case 'date':
                        $input = $('<input type="date" class="form-control editable-input">');
                        break;
                    default:
                        $input = $('<input type="text" class="form-control editable-input">');
                }

                if (type !== 'select') {
                    $input.val(value);
                }

                // Create buttons
                const $buttons = $('<div class="editable-buttons"></div>');
                const $submitBtn = $('<button type="submit" class="btn btn-primary btn-sm">✓</button>');
                const $cancelBtn = $('<button type="button" class="btn btn-secondary btn-sm">✕</button>');

                $buttons.append($submitBtn, $cancelBtn);
                $form.append($input, $buttons);
                $container.append($form);

                // Position container
                const offset = $element.offset();
                $container.css({
                    left: offset.left,
                    top: offset.top + $element.outerHeight() + 5
                });

                $('body').append($container);
                $input.focus();

                // Handle form submission
                $form.on('submit', function(e) {
                    e.preventDefault();
                    submitEditable($element, $input, $container, $backdrop);
                });

                // Handle cancel
                $cancelBtn.on('click', function() {
                    closeEditable($element, $container, $backdrop);
                });
            }

            function submitEditable($element, $input, $container, $backdrop) {
                const newValue = $input.val();
                const type = $element.data('type');

                // Validation
                if (validateValue($element, newValue)) {
                    // Update display
                    if (type === 'select') {
                        const selectedText = $input.find('option:selected').text();
                        $element.text(selectedText);
                        $element.data('value', newValue);
                    } else {
                        $element.text(newValue || 'Empty');
                    }

                    // Handle empty state
                    if (!newValue) {
                        $element.addClass('editable-empty');
                    } else {
                        $element.removeClass('editable-empty');
                    }

                    closeEditable($element, $container, $backdrop);

                    // Simulate server update
                    console.log('Updated field:', $element.attr('id'), 'with value:', newValue);
                }
            }

            function validateValue($element, value) {
                const type = $element.data('type');
                const id = $element.attr('id');

                // Email validation
                if (type === 'email' && value) {
                    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                    if (!emailRegex.test(value)) {
                        alert('Please enter a valid email address');
                        return false;
                    }
                }

                // Age validation
                if (id === 'age' && value) {
                    const age = parseInt(value);
                    if (age < 18 || age > 100) {
                        alert('Age must be between 18 and 100');
                        return false;
                    }
                }

                return true;
            }

            function closeEditable($element, $container, $backdrop) {
                if ($container) $container.remove();
                if ($backdrop) $backdrop.remove();
                activeEditable = null;
            }
        });
</script>